{"version":3,"sources":["context/UserContext.js","context/ContractContext.js","components/NavBar.jsx","assets/Mark_Dai.svg","components/StakeBox.jsx","components/ClaimBox.jsx","components/MainCard.jsx","components/LotteryBox.jsx","components/LotteryModal.jsx","components/NFTBox.jsx","components/NFTModal.jsx","components/OwnerModal.jsx","components/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","userAddress","setUserAddress","ethBalance","setEthBalance","daiBalance","setDaiBalance","khyberBalance","setKhyberBalance","stakingBalance","setStakingBalance","khyberYield","setKhyberYield","khyberUnrealizedYield","setKhyberUnrealizedYield","userNFTs","setUserNFTs","UserProvider","Provider","useUser","useContext","ContractContext","init","setInit","networkId","setNetworkId","provider","setProvider","daiContract","setDaiContract","linkContract","setLinkContract","khyberTokenContract","setKhyberTokenContract","khyberFarmContract","setKhyberFarmContract","lotteryContract","setLotteryContract","isLotteryOpen","setIsLotteryOpen","isNFTOpen","setIsNFTOpen","isOwnerOpen","setIsOwnerOpen","lotteryBalance","setLotteryBalance","linkBalance","setLinkBalance","lotteryCount","setLotteryCount","owner","setOwner","winningNumber","setWinningNumber","ContractProvider","useContract","MetaContainer","styled","div","Container","Title","SubContainer","Network","AccountWrapper","Account","Button","button","LotteryButton","NFTButton","OwnerButton","Eth","NavBar","useState","isOwner","setIsOwner","khrystalContract","loadWinningNumber","useCallback","a","number","toString","loadUserNumbers","nftString","balanceOf","total","i","tokenOfOwnerByIndex","nfts","console","log","ownerComponent","onClick","useEffect","charAt","toUpperCase","slice","Number","parseFloat","ethers","utils","formatEther","toPrecision","Box","Img","img","Banner","StakeInput","input","StakeButton","AlignInput","TopBanner","BottomBanner","StakeStatus","StakeBox","transferAmount","setTransferAmount","stake","signer","getSigner","amount","parseEther","connect","approve","address","tx","waitForTransaction","hash","then","alert","unstake","src","MarkDai","alt","onChange","event","target","value","placeholder","ClaimButton","Circle","withdrawYield","accruing","unrealized","toFixed","Card","CardBanner","AlignBox","MainCard","BodyDiv","Li","li","LotteryBox","ModalStyle","position","top","left","transform","backgroundColor","borderRadius","height","width","zIndex","OverlayStyle","right","bottom","H1","h1","DivBody","BottomDiv","Horizontal","LotteryModal","claimWinnings","claimLottoWinnings","_winningNumber","_lotteryCount","_userNFTs","lotteryPoolAmount","style","NFTBox","MintButton","URI","mintKhrystal","mintNFT","Input","LinkButton","OwnerModal","addLink","transfer","withdrawLink","startLottery","getWinningNumber","Main","App","userState","setKhrystalContract","contractState","loadProvider","prov","providers","Web3Provider","window","ethereum","loadDaiContract","_provider","contract","Contract","ERC20","abi","loadLinkContract","loadKhyberToken","KhyberTokenAddress","KhyberToken","loadKhyberFarmContract","khyberFarmAddress","KhyberFarm","loadKhrystalContract","khrystalContractAddress","KhyberCrystal","loadLotteryContract","lotteryContractAddress","Lottery","componentDidMount","res","error","loadUser","accounts","getAddress","account","loadNetwork","getNetwork","netId","loadEthBalance","user","getBalance","balance","loadDaiBalance","loadKhyberBalance","loadStakingBalance","loadKhyberYield","calculateYieldTotal","loadKhyberUnrealizedYield","userDidMount","loadOwner","contractOwner","loadLotteryPool","loadLinkBalance","loadLotteryCount","count","lottoCount","contractStateDidMount","on","interval","setInterval","clearInterval","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.807786ba.chunk.js","sourcesContent":["import React, { useContext } from 'react'\n\nexport const UserContext = React.createContext({\n    userAddress: \"\",\n    setUserAddress: () => [],\n    ethBalance: \"\",\n    setEthBalance: () => {},\n    daiBalance: \"\",\n    setDaiBalance: () => {},\n    khyberBalance: \"\",\n    setKhyberBalance: () => {},\n    stakingBalance: \"\",\n    setStakingBalance: () => {},\n    khyberYield: \"\",\n    setKhyberYield: () => {},\n    khyberUnrealizedYield: \"\",\n    setKhyberUnrealizedYield: () => {},\n    userNFTs: \"\",\n    setUserNFTs: () => {},\n})\n\nexport const UserProvider = UserContext.Provider\nexport const useUser = () => useContext(UserContext)","import React, { useContext } from \"react\"\n\nexport const ContractContext = React.createContext({\n    init: \"\",\n    setInit: () => {},\n    networkId: \"\",\n    setNetworkId: () => {},\n    provider: {},\n    setProvider: () => {},\n    daiContract: {},\n    setDaiContract: () => {},\n    linkContract: {},\n    setLinkContract: () => {},\n    khyberTokenContract: {},\n    setKhyberTokenContract: () => {},\n    khyberFarmContract: {},\n    setKhyberFarmContract: () => {},\n    lotteryContract: {},\n    setLotteryContract: () => {},\n    isLotteryOpen: false,\n    setIsLotteryOpen: () => {},\n    isNFTOpen: false,\n    setIsNFTOpen: () => {},\n    isOwnerOpen: false,\n    setIsOwnerOpen: () => {},\n    lotteryBalance: \"\",\n    setLotteryBalance: () => {},\n    linkBalance: \"\",\n    setLinkBalance: () => {},\n    lotteryCount: \"\",\n    setLotteryCount: () => {},\n    owner: \"\",\n    setOwner: () => {},\n    winningNumber: \"\",\n    setWinningNumber: () => {}\n})\n\nexport const ContractProvider = ContractContext.Provider\nexport const useContract = () => useContext(ContractContext)","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { ethers } from \"ethers\";\n\nimport { useUser } from \"../context/UserContext\"\nimport { useContract } from \"../context/ContractContext\"\n\nconst MetaContainer = styled.div`\n    height: 6rem;\n    width: 100%;\n    background-color: rgb(30, 31, 38);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`;\n\nconst Container = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;\n\nconst Title = styled.div`\n    font-size: 1.8rem;\n    color: white;\n    font-weight: bold;\n    text-shadow: .03rem .03rem green;\n    margin-left: 2rem;\n`;\n\nconst SubContainer = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst Network = styled.div`\n    font-size: 1.5rem;\n    color: white;\n    margin-right: 2rem;\n`;\n\nconst AccountWrapper = styled.div`\n    height: 2.1rem;\n    width: 16rem;\n    font-size: 1.2rem;\n    background: rgb(44, 48, 58);\n    color: white;\n    padding-left: 1rem;\n    margin-right: 2rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-radius: .8rem;\n`;\n\nconst Account = styled(AccountWrapper)`\n    width: 9rem;\n    background-color: black;\n    height: 2rem;\n    display: flex;\n    justify-content: center;\n    margin-right: 0;\n    color: white;\n    background: black;\n`;\n\nconst Button = styled.button`\n    width: 7rem;\n    height: 2.2rem;\n    font-size: 1.5rem;\n    margin-right: 2rem;\n    border-radius: .8rem;\n    cursor: pointer;\n    outline: none;\n    color: white;\n    background: transparent;\n    border: none;\n\n    ::after {\n        content: '';\n        display: block;\n        position: relative;\n        top: 0.5rem;\n        left: 25%;\n        width: 0%;\n        height: .5rem;\n        border-radius: 1rem;\n        transition: 120ms;\n      }\n\n    :hover {\n        ::after {\n            width: 50%;\n        }\n    }\n`;\n\nconst LotteryButton = styled(Button)`\n    ::after {\n        background: linear-gradient(45deg, #5f3c74, green);\n    }\n`;\n\nconst NFTButton = styled(Button)`\n    ::after {\n        background: linear-gradient(45deg, #5f3c74, #ED7014);\n    }\n`;\n\nconst OwnerButton = styled(Button)`\n    ::after {\n        background: linear-gradient(45deg, #5f3c74, white);\n    }\n`;\n\nconst Eth = styled.div`\n    margin-left: .5rem;\n`;\n\n \nexport default function NavBar() {\n\n    const [isOwner, setIsOwner] = useState(false)\n\n    const {\n        userAddress,\n        ethBalance,\n        setUserNFTs\n    } = useUser();\n\n    const {\n        networkId,\n        isLotteryOpen,\n        isNFTOpen,\n        isOwnerOpen,\n        lotteryContract,\n        lotteryCount,\n        khrystalContract,\n        owner,\n        setIsLotteryOpen,\n        setIsNFTOpen,\n        setIsOwnerOpen,\n        setWinningNumber\n    } = useContract();\n\n    /**\n     * @notice Fetch functions for the lottery\n     */\n    \n    const loadWinningNumber = useCallback(async() => {\n        let number = await lotteryContract.winningNumber(lotteryCount - 1)\n        setWinningNumber(number.toString())\n    }, [lotteryCount, lotteryContract, setWinningNumber])\n\n    const loadUserNumbers = useCallback(async() => {\n        try {\n            let nftString = \"\"\n            let total = await khrystalContract.balanceOf(userAddress)\n            let i = 0\n            while(i < total){\n                let nfts = await khrystalContract.tokenOfOwnerByIndex(userAddress, i)\n                if (nftString === \"\"){\n                    nftString = nfts.toString()\n                } else {\n                    nftString += `, ${nfts.toString()}`\n                }\n                i++\n            }\n            setUserNFTs(nftString)\n        } catch (error) {\n            console.log(error)\n        }\n    }, [khrystalContract, userAddress, setUserNFTs])\n\n    /**\n     * @notice Functions handling modals for lottery, nft, and owner\n     */\n\n    async function handleLottery() {\n        try{\n            await loadWinningNumber()\n        } catch (error) {\n            console.log(\"Lottery not initiated\", error)\n        }\n        await loadUserNumbers()\n        setIsLotteryOpen(!isLotteryOpen)\n    }\n\n    function handleNFT() {\n        setIsNFTOpen(!isNFTOpen)\n    }\n\n    function handleOwner() {\n        setIsOwnerOpen(!isOwnerOpen)\n    }\n\n    const ownerComponent = <OwnerButton onClick={handleOwner} >Owner</OwnerButton>\n\n    useEffect(() => {\n        if(userAddress === owner){\n            setIsOwner(true)\n        } else {\n            setIsOwner(false)\n        }\n    }, [userAddress, owner, setIsOwner])\n\n    return(\n            <MetaContainer>\n                <Container>\n                    <Title>Khyber Farm</Title>\n                    <SubContainer>\n                        {isOwner ? ownerComponent : null}\n                        <NFTButton onClick={handleNFT}>\n                            NFT\n                        </NFTButton>\n                        <LotteryButton onClick={handleLottery}>\n                            Lottery\n                        </LotteryButton>\n                    </SubContainer>\n                    <SubContainer>\n                        <Network>\n                            { networkId ? networkId.charAt(0).toUpperCase() + networkId.slice(1) : \"N/A\" }\n                        </Network>\n                        <AccountWrapper>\n                            <Eth>\n                                { ethBalance ? Number.parseFloat(ethers.utils.formatEther(ethBalance)).toPrecision(3) : \"0\" } ETH\n                                </Eth>\n                            <Account>\n                                { userAddress ? userAddress.slice(0, 5) + \"...\" + userAddress.slice(38, 42) : null }\n                            </Account>\n                        </AccountWrapper>\n                    </SubContainer>\n                </Container>\n            </MetaContainer>\n    )\n}","export default __webpack_public_path__ + \"static/media/Mark_Dai.cac848e2.svg\";","import React, { useState } from \"react\"\nimport styled from \"styled-components\";\nimport { ethers } from \"ethers\";\nimport MarkDai from \"../assets/Mark_Dai.svg\";\n\nimport { useUser } from \"../context/UserContext\"\nimport { useContract } from \"../context/ContractContext\"\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin: 2rem;\n`;\n\nconst Box = styled.div`\n    height: 15rem;\n    width: 22rem;\n    background: #2c303a;\n    border-radius: 10px;\n    padding: .4rem;\n    display: flex;\n    flex-direction: column;\n    margin-top: 1rem;\n`;\n\nconst Title = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    font-size: 1.5rem;\n    color: white;\n`\n\nconst Img = styled.img`\n    height: 1.5rem;\n    width: 1.5rem;\n    margin-right: .4rem;\n`;\n\nconst Banner = styled.div`\n    width: 100%;\n    height: 33%;\n    color: white;\n    background-color: black;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`;\n\nconst StakeInput = styled.input`\n    height: 3rem;\n    width: 100%;\n`;\n\nconst StakeButton = styled.button`\n    height: 3rem;\n    width: 50%;\n    background-color: rgb(68, 72, 87);\n    border: 3px;\n    color: white;\n    font-weight: 300;\n    font-size: 1.2rem;\n    cursor: pointer;\n    :hover {\n        background-color: rgb(90, 95, 115)\n    }\n`;\n\nconst AlignInput = styled.div`\n    display: flex;\n    align-items: center;\n    background-color: rgba(24,24,24,1);\n`;\n\nconst TopBanner = styled.div`\n    align-self: center;\n    font-size: 1.25rem;\n    font-weight: bold;\n`;\n\nconst BottomBanner = styled.div`\n    display: flex;\n    justify-content: space-around;\n    background: #2c303a;\n    font-size: 1rem;\n    font-weight: bold;\n`;\n\nconst StakeStatus = styled.button`\n    width: 7rem;\n    height: 4.3rem;\n    font-size: 1rem;\n    background-color: transparent;\n    border: none;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    color: white;\n`;\n\nexport default function StakeBox() {\n\n    const {\n        daiBalance, \n        stakingBalance,\n    } = useUser();\n\n    const {\n        provider,\n        daiContract,\n        khyberFarmContract,\n    } = useContract();\n\n    const [ transferAmount, setTransferAmount ] = useState(\"\");\n\n    /**\n     * @notice Fired when user types in input. Sets transfer amount for stake/unstake functions \n     */\n    const handleTransfer = (event) => {\n        setTransferAmount(event.target.value)\n    }\n\n    /**\n     * @notice Calls the stake function\n     */\n    const stake = async() => {\n        try {\n            let signer = provider.getSigner()\n            let amount = ethers.utils.parseEther(transferAmount)\n            let tx = await daiContract.connect(signer).approve(khyberFarmContract.address, amount)\n            provider.waitForTransaction(tx.hash)\n            .then(async() => {\n                tx = await khyberFarmContract.connect(signer).stake(amount)\n            })\n            return tx\n        } catch (error) {\n            alert(error)\n        }\n    }\n\n    /**\n     * @notice Calls the unstake function\n     */\n    const unstake = async() => {\n        try {\n            let signer = provider.getSigner()\n            let amount = ethers.utils.parseEther(transferAmount)\n            let tx = await khyberFarmContract.connect(signer).unstake(amount)\n            return tx\n        } catch (error) {\n            alert(error)\n        }\n    }\n\n    return(\n        <Container>\n            <Title>\n                Stake/Unstake\n            </Title>\n            <Box>\n                <Banner>\n                    <TopBanner>\n                    <Img src={MarkDai} alt=\"DAI logo\"/>\n                            DAI (1 KHYBER/ Day)\n                    </TopBanner>\n                </Banner>\n                <AlignInput>\n                    <StakeInput \n                        onChange={handleTransfer} \n                        placeholder=\"0 DAI\"\n                    />\n                </AlignInput>\n                <AlignInput>\n                    <StakeButton onClick={stake}>\n                        Stake\n                    </StakeButton>\n                    <StakeButton onClick={unstake}>\n                        Unstake\n                    </StakeButton>\n                </AlignInput>\n                <Banner>\n                    <BottomBanner>\n                    </BottomBanner>\n                    <BottomBanner>\n                        <StakeStatus>\n                            DAI Balance:\n                            <b>\n                                { daiBalance ? ethers.utils.formatEther(daiBalance) : \"0\" }\n                            </b>\n                        </StakeStatus>\n                        <StakeStatus>\n                            Staked:\n                            <b>\n                                { stakingBalance ? ethers.utils.formatEther(stakingBalance) : \"0\" }\n                            </b>\n                        </StakeStatus>\n                    </BottomBanner>\n                </Banner>\n            </Box>\n        </Container>\n    )\n}","import React from \"react\"\nimport styled from \"styled-components\";\nimport { ethers } from \"ethers\";\n\nimport { useUser } from \"../context/UserContext\"\nimport { useContract } from \"../context/ContractContext\"\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin: 2rem;\n`;\n\nconst Box = styled.div`\n    height: 15rem;\n    width: 22rem;\n    background: #2c303a;\n    border-radius: 10px;\n    padding: .4rem;\n    display: flex;\n    flex-direction: column;\n    margin-top: 1rem;\n`;\n\nconst Title = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    font-size: 1.5rem;\n    color: white;\n`\n\nconst Banner = styled.div`\n    width: 100%;\n    height: 33%;\n    color: white;\n    background-color: black;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`;\n\nconst ClaimButton = styled.button`\n    height: 5rem;\n    width: 100%;\n    background-color: rgb(68, 72, 87);\n    border: 3px;\n    color: white;\n    font-weight: bold;\n    font-size: 1.2rem;\n    cursor: pointer;\n    :hover {\n        background-color: rgb(90, 95, 115)\n    }\n`;\n\nconst TopBanner = styled.div`\n    align-self: center;\n    font-size: 1.65rem;\n    font-weight: bold;\n    color: green;\n    text-shadow: .03rem .03rem #ED7014;\n`;\n\nconst BottomBanner = styled.div`\n    align-self: center;\n    font-size: 1rem;\n    font-weight: bold;\n`;\n\nconst Circle = styled.button`\n    width: 12rem;\n    height: 4rem;\n    border: none;\n    border-radius: 1rem;\n    background-color: transparent;\n    color: white;\n    font-size: 1rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport default function StakeBox() {\n\n    const {\n        stakingBalance,\n        khyberYield,\n        khyberUnrealizedYield,\n    } = useUser();\n\n    const {\n        provider,\n        khyberFarmContract\n    } = useContract();\n\n    const withdrawYield = async() => {\n        let signer = provider.getSigner()\n        let tx = await khyberFarmContract.connect(signer).withdrawYield()\n        return tx\n    }\n    \n    const accruing = khyberYield / 1e18\n    const unrealized = khyberUnrealizedYield ? khyberUnrealizedYield / 1e18 : 0\n\n    return(\n        <Container>\n            <Title>\n                Claim Rewards\n            </Title>\n        <Box>\n            <Banner>\n                <TopBanner>\n                    <div>\n                        { parseFloat(accruing + unrealized).toFixed(3) } KHYBER\n                    </div>\n                </TopBanner>\n            </Banner>\n                <BottomBanner>\n                    <Circle>\n                        <span>Rate: <b>{ stakingBalance ? ethers.utils.formatEther(stakingBalance) : \"0\" } / day</b></span>\n                    </Circle>\n                </BottomBanner>\n            <div>\n                <ClaimButton onClick={withdrawYield}>\n                    Claim\n                </ClaimButton>\n            </div>\n        </Box>\n        </Container>\n    )\n}","import React from \"react\"\nimport styled from \"styled-components\";\nimport { ethers } from \"ethers\";\n\nimport StakeBox from \"./StakeBox\"\nimport ClaimBox from \"./ClaimBox\"\n\nimport { useUser } from \"../context/UserContext\"\n\nconst Container = styled.div`\n    display: flex;\n    justify-content: center;\n`;\n\nconst Card = styled.div`\n    height: 60rem;\n    width: 60rem;\n    margin-top: 3rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nconst CardBanner = styled.div`\n    width: 90%;\n    height: 3rem;\n    background-color: #2b2e35;\n    margin-top: 2rem;\n    border: .1rem solid black;\n    border-radius: 1.5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: white;\n    font-size: 1.2rem;\n`;\n\nconst AlignBox = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nexport default function MainCard() {\n\n    const {\n        khyberBalance\n    } = useUser();\n\n    return(\n        <Container>\n            <Card>\n                <AlignBox>\n                    <StakeBox />\n                    <ClaimBox />\n                </AlignBox>\n                <CardBanner>\n                    KHYBER Balance: {khyberBalance ? Number.parseFloat(ethers.utils.formatEther(khyberBalance)).toFixed(3).toString() : \"0\"}\n                </CardBanner>\n            </Card>\n        </Container>\n    )\n}\n","import React from \"react\"\nimport styled from \"styled-components\";\n\nimport { useContract } from \"../context/ContractContext\"\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin: 2rem;\n`;\n\nconst Box = styled.div`\n    height: 25rem;\n    width: 22rem;\n    background: linear-gradient(45deg, #5f3c74, green);\n    padding: .4rem;\n    background-color: #2b2e35;\n    display: flex;\n    flex-direction: column;\n    margin-top: 1rem;\n    border: .3rem solid black;\n`;\n\nconst Banner = styled.div`\n    width: 100%;\n    height: 25%;\n    background: rgba(24,24,24,0.95);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`;\n\nconst BodyDiv = styled.div`\n    width: 100%;\n    background-color: black;\n    color: white;\n    font-size: 1rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Li = styled.li`\n    margin: .5rem;\n`;\n\nconst TopBanner = styled.div`\n    align-self: center;\n    font-size: 1.65rem;\n    font-weight: bold;\n    color: white;\n    text-shadow: .03rem .03rem gray;\n`;\n\nconst BottomBanner = styled.div`\n    align-self: center;\n    font-size: 1.4rem;\n    font-weight: bold;\n`;\n\nconst Circle = styled.button`\n    width: 12rem;\n    height: 4rem;\n    border-radius: 1rem;\n    border: none;\n    background-color: transparent;\n    color: white;\n    font-size: 1rem;\n    font-weight: bold;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport default function LotteryBox() {\n\n    const {\n        lotteryBalance,\n    } = useContract();\n    \n    return(\n        <Container>\n        <Box>\n            <Banner>\n                <TopBanner>\n                    <div>\n                        Khrystal Lottery\n                    </div>\n                </TopBanner>\n            </Banner>\n        \n            <BodyDiv>\n                <ul>\n                    <Li>\n                        Each minted Khyber Crystal NFT doubles as a lottery ticket\n                    </Li>\n                    <Li>\n                        The tokenId of the KHRYSTAL NFT is your lottery ticket number\n                    </Li>\n                    <Li>\n                        Winning number is verifiably random using Chainlink's VRF\n                    </Li>\n                    <Li>\n                        Click on the Lottery tab above to see the results of the latest lottery\n                    </Li>\n                </ul>\n            </BodyDiv>\n\n            <Banner>\n                <BottomBanner>\n                    <Circle>\n                        Prize Pool: \n                        <div>\n                            {lotteryBalance ? lotteryBalance : \"0\"} KHYBER\n                        </div>\n                    </Circle>\n                </BottomBanner>\n            </Banner>\n        </Box>\n        </Container>\n    )\n}","import React from \"react\"\nimport styled from \"styled-components\";\n\nimport { useUser } from \"../context/UserContext\"\nimport { useContract } from \"../context/ContractContext\"\n\nimport LotteryBox from \"./LotteryBox\";\n\nconst ModalStyle ={\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    backgroundColor: 'black',\n    borderRadius: '2rem',\n    height: '50%',\n    width: '60%',\n    zIndex: 1000\n}\n\nconst OverlayStyle = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, .7)',\n    zIndex: 1000\n}\n\nconst Container = styled.div` \n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n`;\n\nconst H1 = styled.h1`\n    background: linear-gradient(45deg, #5f3c74, green);\n    background-clip: text;\n    -webkit-background-clip: text;\n    -moz-background-clip: text;\n    -moz-text-fill-color: transparent;\n    -webkit-text-fill-color: transparent;\n    position: fixed;\n    font-size: 4rem;\n    top:-6.4rem;\n    left: 5%;\n`;\n\nconst DivBody = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    height: 20rem;\n    width: 18rem;\n    margin: 3.5rem 0 1rem 0;\n    align-items: center;\n    background-color: transparent;\n    border: .1rem solid grey;\n    color: white;\n`;\n\nconst Li = styled.li`\n    margin: .6rem;\n`;\n\nconst ClaimButton = styled.button`\n    background: linear-gradient(45deg, #5f3c74, green);\n    font-size: 1.5rem;\n    color: white;\n    width: 160%;\n    height: 4rem;\n    margin-left: -30%;\n    cursor: pointer;\n`;\n\nconst BottomDiv = styled.div`\n    height: 20%;\n`;\n\nconst Horizontal = styled.div`\n    display: flex;\n    flex-direction: row;\n`\n\nexport default function LotteryModal() {\n\n    const {\n        setIsLotteryOpen,\n        provider,\n        lotteryContract,\n        lotteryBalance,\n        lotteryCount,\n        winningNumber\n    } = useContract();\n\n    const {\n        userNFTs\n    } = useUser();\n\n    const closeLotteryModal = () => {\n        setIsLotteryOpen(false)\n    }\n\n    const claimWinnings = async() => {\n        try {\n            let signer = provider.getSigner()\n            let tx = await lotteryContract.connect(signer).claimLottoWinnings()            \n            return tx\n        } catch (error) {\n            alert(error)\n        }\n    }\n\n    const _winningNumber = winningNumber ? winningNumber : \"-\"\n    const _lotteryCount = lotteryCount ? lotteryCount : \"0\"\n    const _userNFTs = userNFTs ? userNFTs : \"-\"\n    const lotteryPoolAmount = lotteryBalance ? lotteryBalance : \"0\"\n    \nreturn(\n    \n    <>\n        <div style={OverlayStyle} onClick={closeLotteryModal}/>\n        <div style={ModalStyle}>\n            <H1>Lottery</H1>\n            <Horizontal>\n            <LotteryBox/>\n            <Container>\n                    <DivBody>\n                        <ul>\n                            <Li>\n                                Lottery Count: {_lotteryCount} \n                            </Li>\n                            <Li>\n                                Winning Number: {_winningNumber}\n                            </Li>\n                            <Li>\n                                Your Number(s): {_userNFTs}\n                            </Li>\n                            <Li>\n                                Lottery Pool: {lotteryPoolAmount} KHYBER\n                            </Li>\n                        </ul>\n                        </DivBody>\n                        <BottomDiv>\n                        <ClaimButton onClick={claimWinnings}>\n                            Claim Winnings\n                        </ClaimButton>\n                        </BottomDiv>\n            </Container>\n            </Horizontal>\n        </div>\n    </>\n    )\n}","import React from \"react\"\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin: 2rem;\n`;\n\nconst Box = styled.div`\n    height: 25rem;\n    width: 22rem;\n    background: linear-gradient(45deg, #5f3c74, #ED7014);\n    padding: .4rem;\n    display: flex;\n    flex-direction: column;\n    margin-top: 1rem;\n    border: .3rem solid black;\n`;\n\nconst Banner = styled.div`\n    width: 100%;\n    height: 25%;\n    background-color: rgba(24,24,24,1);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`;\n\nconst BodyDiv = styled.div`\n    width: 100%;\n    background-color: black;\n    color: white;\n    font-size: 1rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Li = styled.li`\n    margin: .5rem;\n`;\n\nconst TopBanner = styled.div`\n    align-self: center;\n    font-size: 1.65rem;\n    font-weight: bold;\n    color: white;\n`;\n\nconst BottomBanner = styled.div`\n    font-size: 1.4rem;\n    font-weight: bold;\n    display: flex;\n    align-self: center;\n    align-items: center;\n`;\n\nconst Circle = styled.button`\n    width: 12rem;\n    height: 4rem;\n    border: .05rem dashed white;\n    border-radius: 1rem;\n    background-color: transparent;\n    border: none;\n    color: white;\n`;\n\nexport default function NFTBox() {\n    \n    return(\n        <Container>\n        <Box>\n            <Banner>\n                <TopBanner>\n                    <div>\n                        Khyber Crystal\n                    </div>\n                </TopBanner>\n            </Banner>\n        \n            <BodyDiv>\n                <ul>\n                    <Li>\n                        Purchase a Khyber Crystal NFT for 1 KHYBER\n                    </Li>\n                    <Li>\n                        Each minted Khyber Crystal NFT doubles as a lottery ticket\n                    </Li>\n                    <Li>\n                        All KHYBER goes toward the lottery pool to win back\n                    </Li>\n                    <Li>\n                        Click on the NFT tab above to mint an NFT\n                    </Li>\n                </ul>\n            </BodyDiv>\n\n            <Banner>\n                <BottomBanner>\n                    <Circle>\n                        <div>\n                            Cost: 1 KHYBER\n                        </div>\n                    </Circle>\n                </BottomBanner>\n            </Banner>\n        </Box>\n        </Container>\n    )\n}\n","import React from \"react\"\nimport styled from \"styled-components\";\nimport { ethers } from \"ethers\" \n\nimport { useUser } from \"../context/UserContext\"\nimport { useContract } from \"../context/ContractContext\"\n\nimport NFTBox from \"./NFTBox\";\n\nconst ModalStyle ={\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    backgroundColor: 'black',\n    borderRadius: '2rem',\n    height: '50%',\n    width: '60%',\n    zIndex: 1000\n}\n\nconst OverlayStyle = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, .7)',\n    zIndex: 1000\n}\n\nconst Container = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n`;\n\nconst H1 = styled.h1`\n    background: linear-gradient(45deg, #5f3c74, #ED7014);\n    background-clip: text;\n    -webkit-background-clip: text;\n    -moz-background-clip: text;\n    -moz-text-fill-color: transparent;\n    -webkit-text-fill-color: transparent;\n    position: fixed;\n    font-size: 4rem;\n    top:-6.4rem;\n    left: 5%;\n`;\n\nconst MintButton = styled.button`\n    background: linear-gradient(45deg, #5f3c74, #ED7014);\n    font-size: 1.5rem;\n    color: white;\n    width: 150%;\n    height: 4rem;\n    margin-left: -25%;\n    cursor: pointer;\n`;\n\nconst DivBody = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    height: 20rem;\n    width: 18rem;\n    margin: 3rem 0 2rem 0;\n    align-items: center;\n    background-color: transparent;\n    border: .1rem solid black;\n    border-radius: 1rem;\n    color: white;\n`;\n\nconst Img = styled.img`\n    height: 20rem;\n    width: 20rem;\n`;\n\nconst BottomDiv = styled.div`\n    height: 20%;\n`;\n\nconst Horizontal = styled.div`\n    display: flex;\n    flex-direction: row;\n`\n\nexport default function LotteryModal() {\n\n    const {\n        userAddress\n    } = useUser();\n\n    const {\n        provider,\n        khyberFarmContract,\n        khyberTokenContract,\n        lotteryContract,\n        setIsNFTOpen\n    } = useContract();\n\n    function closeModal() {\n        setIsNFTOpen(false)\n    }\n\n    const URI = \"https://media.giphy.com/media/aaoR7auCe3Hj0Np9M4/giphy.gif\"\n\n    const mintKhrystal = async() => {\n        try {\n            let signer = provider.getSigner()\n            let tx = await khyberTokenContract.connect(signer).approve(\n                lotteryContract.address, ethers.utils.parseEther(\"1\")\n                )\n            provider.waitForTransaction(tx.hash)\n                .then(async() => {\n                    tx = await khyberFarmContract.connect(signer).mintNFT(userAddress, URI)\n                })\n                return tx\n        } catch (error) {\n            alert(error)\n        }\n    }\n    \n\nreturn(\n    <>\n        <div style={OverlayStyle} onClick={closeModal}/>\n        <div style={ModalStyle}>\n        <H1>Mint NFT</H1>\n            <Horizontal>\n                <NFTBox/>\n                <Container>\n                    <DivBody>\n                        <Img src={URI} alt=\"display image\"/>\n                    </DivBody>\n                    <BottomDiv>\n                        <MintButton onClick={mintKhrystal}>\n                            MINT KHRYSTAL NFT\n                        </MintButton>\n                    </BottomDiv>\n                </Container>\n            </Horizontal>\n        </div>\n    </>\n    )\n}","import React, { useState } from \"react\"\nimport styled from \"styled-components\";\nimport { ethers } from \"ethers\" \n\nimport { useContract } from \"../context/ContractContext\"\n\nconst ModalStyle ={\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    backgroundColor: 'black',\n    borderRadius: '2rem',\n    height: '24rem',\n    width: '25rem',\n    zIndex: 1000\n}\n\nconst OverlayStyle = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, .7)',\n    zIndex: 1000\n}\n\nconst Container = styled.div` // 3 divs space around\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n`;\n\nconst H1 = styled.h1`\n    background: linear-gradient(45deg, #5f3c74, white);\n    background-clip: text;\n    -webkit-background-clip: text;\n    -moz-background-clip: text;\n    -moz-text-fill-color: transparent;\n    -webkit-text-fill-color: transparent;\n    position: fixed;\n    font-size: 4rem;\n    top:-6.4rem;\n    left: 5%;\n`;\n\nconst DivBody = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    height: 10rem;\n    width: 18rem;\n    align-items: center;\n    background-color: transparent;\n    border-radius: 1rem;\n    color: white;\n`;\n\nconst Input = styled.input`\n    width: 5rem;\n    height: 1.5rem;\n    margin-top: 4rem;\n`;\n\nconst LinkButton = styled.button`\n    width: 5rem;\n    height: 1.9rem;\n    cursor: pointer;\n`;\n\nconst BottomDiv = styled.div`\n    height: 20%;\n`;\n\nconst LotteryButton = styled.button`\n    width: 20rem;\n    height: 4rem;\n    font-size: 1.5rem;\n    background: linear-gradient(45deg, #5f3c74, white); \n    color: white;\n    cursor: pointer;\n`;\n \nexport default function OwnerModal() {\n\n    const [ transferAmount, setTransferAmount ] = useState(\"\");\n\n    const {\n        linkBalance,\n        provider,\n        lotteryContract,\n        linkContract,\n        setIsOwnerOpen\n    } = useContract();\n\n    const closeModal = () => {\n        setIsOwnerOpen(false)\n    }\n\n    const handleTransfer = (event) => {\n        setTransferAmount(event.target.value)\n    } \n\n    const addLink = async() => {\n        try {\n            let signer = provider.getSigner()\n            let amount = ethers.utils.parseEther(transferAmount)\n            let tx = await linkContract.connect(signer).transfer(lotteryContract.address, amount)\n            return tx\n        } catch (error) {\n            alert(error)\n        }\n    }\n\n    const withdrawLink = async() => {\n        try {\n            let signer = provider.getSigner()\n            let tx = await lotteryContract.connect(signer).withdrawLink()\n            return tx\n        } catch (error) {\n            alert(error)\n        }\n    }\n\n    const startLottery = async() => {\n        try {\n            let signer = provider.getSigner()\n            let tx = await lotteryContract.connect(signer).getWinningNumber()\n            return tx\n        } catch (error) {\n            alert(error)\n        }\n    }\n\nreturn(\n    <>\n        <div style={OverlayStyle} onClick={closeModal}/>\n        <div style={ModalStyle}>\n            <H1>Owner</H1>\n            <Container>\n                <DivBody>\n                    <div>\n                        Link Balance: {linkBalance ? linkBalance : \"-\"}\n                    </div>\n                    <div>\n                        <Input placeholder=\"Link Amount\" onChange={handleTransfer} />\n                        <LinkButton onClick={addLink}>\n                            Add Link\n                        </LinkButton>\n                        <LinkButton onClick={withdrawLink}>\n                            Withdraw\n                        </LinkButton>\n                    </div>  \n                </DivBody>\n                <BottomDiv>\n                    <LotteryButton onClick={startLottery}>\n                        Start Lottery\n                    </LotteryButton>\n                </BottomDiv>\n            </Container>\n        </div>\n    </>\n    )\n}","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport NavBar from \"./NavBar\";\nimport MainCard from \"./MainCard\";\nimport LotteryModal from \"./LotteryModal\";\nimport NFTModal from \"./NFTModal\"\nimport OwnerModal from \"./OwnerModal\"\n\nimport { useContract } from \"../context/ContractContext\"; \n\n\nconst Container = styled.div`\n    height: 100%;\n    width: 100%;\n`;\n\nexport default function Main() {\n\n    const {\n        isLotteryOpen,\n        isNFTOpen,\n        isOwnerOpen\n    } = useContract();\n\n    \n    return(\n        <>\n        <NavBar />\n        <Container>\n            {isLotteryOpen ? <LotteryModal /> : null}\n            {isNFTOpen ? <NFTModal /> : null}\n            {isOwnerOpen ? < OwnerModal/> : null}\n            <MainCard />\n        </Container>\n        </>\n    )\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { ethers } from \"ethers\"\n\nimport KhyberFarm from \"./abis/KhyberFarm.json\"\nimport KhyberToken from \"./abis/KhyberToken.json\"\nimport KhyberCrystal from \"./abis/KhyberCrystal.json\"\nimport Lottery from \"./abis/Lottery.json\"\nimport ERC20 from \"./abis/ERC20.json\"\n\nimport { UserProvider } from \"./context/UserContext\"\nimport { ContractProvider } from \"./context/ContractContext\"\n\nimport Main from \"./components/Main\";\n\nconst Container = styled.div`\n    width: 100%;\n    height: 75rem;\n`;\n\nfunction App() {\n\n  /**\n   * @notice User state\n   */\n    const [userAddress, setUserAddress] = useState(\"\")\n    const [ethBalance, setEthBalance] = useState(\"\")\n    const [daiBalance, setDaiBalance] = useState(\"\")\n    const [khyberBalance, setKhyberBalance] = useState(\"\")\n    const [stakingBalance, setStakingBalance] = useState(\"\")\n    const [khyberYield, setKhyberYield] = useState(\"\")\n    const [khyberUnrealizedYield, setKhyberUnrealizedYield] = useState(\"\")\n    const [userNFTs, setUserNFTs] = useState(\"\")\n\n    const userState = {\n        userAddress, \n        setUserAddress,\n        ethBalance, \n        setEthBalance,\n        daiBalance,\n        setDaiBalance,\n        khyberBalance,\n        setKhyberBalance,\n        stakingBalance,\n        setStakingBalance,\n        khyberYield,\n        setKhyberYield,\n        khyberUnrealizedYield,\n        setKhyberUnrealizedYield,\n        userNFTs,\n        setUserNFTs,\n    }\n\n    /**\n     * @notice Contract state\n     */\n    const [init, setInit] = useState(false)\n    const [networkId, setNetworkId] = useState(\"\")\n    const [provider, setProvider] = useState({})\n    const [daiContract, setDaiContract] = useState({})\n    const [linkContract, setLinkContract] = useState({})\n    const [khyberTokenContract, setKhyberTokenContract] = useState({})\n    const [khyberFarmContract, setKhyberFarmContract] = useState({})\n    const [khrystalContract, setKhrystalContract] = useState({})\n    const [lotteryContract, setLotteryContract] = useState({})\n    const [isLotteryOpen, setIsLotteryOpen] = useState(false)\n    const [isNFTOpen, setIsNFTOpen] = useState(false)\n    const [isOwnerOpen, setIsOwnerOpen] = useState(false)\n    const [lotteryBalance, setLotteryBalance] = useState(\"\")\n    const [linkBalance, setLinkBalance] = useState(\"\")\n    const [lotteryCount, setLotteryCount] = useState(\"\")\n    const [owner, setOwner] = useState(\"\")\n    const [winningNumber, setWinningNumber] = useState(\"\")\n\n    const contractState = {\n        init,\n        setInit,\n        networkId,\n        setNetworkId,\n        provider,\n        setProvider,\n        daiContract,\n        setDaiContract,\n        linkContract,\n        setLinkContract,\n        khyberTokenContract,\n        setKhyberTokenContract,\n        khyberFarmContract,\n        setKhyberFarmContract,\n        khrystalContract,\n        setKhrystalContract,\n        lotteryContract,\n        setLotteryContract,\n        isLotteryOpen, \n        setIsLotteryOpen,\n        isNFTOpen,\n        setIsNFTOpen,\n        isOwnerOpen,\n        setIsOwnerOpen,\n        lotteryBalance,\n        setLotteryBalance,\n        linkBalance,\n        setLinkBalance,\n        lotteryCount,\n        setLotteryCount,\n        owner,\n        setOwner,\n        winningNumber,\n        setWinningNumber,\n    }\n\n    /**\n     * @notice componentDidMount\n     */\n\n    const loadProvider = useCallback(async() => {\n        let prov = new ethers.providers.Web3Provider(window.ethereum)\n        setProvider(prov)\n        return prov\n    }, [setProvider])\n\n    const loadDaiContract = useCallback(async(_provider) => {\n        let daiAddress = \"0xc3dbf84Abb494ce5199D5d4D815b10EC29529ff8\" \n        let contract = new ethers.Contract(daiAddress, ERC20.abi, _provider)\n        setDaiContract(contract)\n    }, [setDaiContract])\n    \n    const loadLinkContract = useCallback(async(_provider) => {\n        let linkAddress = \"0x01BE23585060835E02B77ef475b0Cc51aA1e0709\"\n        let contract = new ethers.Contract(linkAddress, ERC20.abi, _provider)\n        setLinkContract(contract)\n    }, [setLinkContract])\n\n    const loadKhyberToken = useCallback(async(_provider) => {\n        // let KhyberTokenAddress = KhyberToken[\"networks\"][\"42\"][\"address\"] // kovan network id\n        let KhyberTokenAddress = KhyberToken[\"networks\"][\"4\"][\"address\"] // rinkeby network id\n        let contract = new ethers.Contract(KhyberTokenAddress, KhyberToken.abi, _provider)\n        setKhyberTokenContract(contract)\n    }, [setKhyberTokenContract])\n\n    const loadKhyberFarmContract = useCallback(async(_provider) => {\n        // let khyberFarmAddress = KhyberFarm[\"networks\"][\"42\"][\"address\"] // kovan network id\n        let khyberFarmAddress = KhyberFarm[\"networks\"][\"4\"][\"address\"] // rinkeby network id\n        let contract = new ethers.Contract(khyberFarmAddress, KhyberFarm.abi, _provider)\n        setKhyberFarmContract(contract)\n    }, [setKhyberFarmContract])\n\n    const loadKhrystalContract = useCallback(async(_provider) => {\n        // let khrystalContractAddress = KhyberCrystal[\"networks\"][\"42\"][\"address\"] // kovan network id\n        let khrystalContractAddress = KhyberCrystal[\"networks\"][\"4\"][\"address\"] // rinkeby network id\n        let contract = new ethers.Contract(khrystalContractAddress, KhyberCrystal.abi, _provider)\n        setKhrystalContract(contract)\n    }, [setKhrystalContract])\n\n    const loadLotteryContract = useCallback(async(_provider) => {\n        // let lotteryContractAddress = Lottery[\"networks\"][\"42\"][\"address\"] // kovan network id\n        let lotteryContractAddress = Lottery[\"networks\"][\"4\"][\"address\"] // rinkeby network id\n        console.log(\"Lottery: \", lotteryContractAddress)\n        let contract = new ethers.Contract(lotteryContractAddress, Lottery.abi, _provider)\n        setLotteryContract(contract)\n    }, [setLotteryContract])\n\n    const componentDidMount = useCallback(async() => {\n    \tawait loadProvider().then(async(res) => {\n            await loadDaiContract(res)\n            await loadLinkContract(res)\n            await loadKhyberToken(res)\n            await loadKhyberFarmContract(res)\n            await loadKhrystalContract(res)\n            await loadLotteryContract(res)\n        })\n        setInit(true)\n    }, [\n        loadProvider, \n        loadDaiContract, \n        loadLinkContract,\n        loadKhyberToken, \n        loadKhyberFarmContract, \n        loadKhrystalContract,\n        loadLotteryContract,\n        setInit\n    ])\n\n    useEffect(() => {\n    \ttry {\n    \t\tif(init === false){\n    \t\t\tcomponentDidMount()\n    \t\t  }\n    \t} catch (error) {\n    \t\tconsole.log(error)\n    \t}\n    }, [componentDidMount, daiContract, init])\n\n    /**\n     * @notice userDidMount functions\n     */\n\n    const loadUser = useCallback(async() => {\n        let accounts = provider.getSigner()\n        let account = await accounts.getAddress()\n        return account\n    }, [provider])\n\n    const loadNetwork = useCallback(async() => {\n        let netId = await provider.getNetwork()\n        setNetworkId(netId[\"name\"])\n    }, [provider, setNetworkId])\n\n    const loadEthBalance = useCallback(async(user) => {\n        let balance = await provider.getBalance(user)\n        setEthBalance(balance)\n    }, [provider, setEthBalance])\n\n    const loadDaiBalance = useCallback(async(user) => {\n        console.log(user);\n        let balance = await daiContract.balanceOf(user)\n        setDaiBalance(balance.toString())\n    }, [daiContract, setDaiBalance])\n\n    const loadKhyberBalance = useCallback(async(user) => {\n        let balance = await khyberTokenContract.balanceOf(user)\n        setKhyberBalance(balance.toString())\n    }, [khyberTokenContract, setKhyberBalance])\n\n    const loadStakingBalance = useCallback(async(user) => {\n        let balance = await khyberFarmContract.stakingBalance(user)\n        setStakingBalance(balance.toString())\n    }, [setStakingBalance, khyberFarmContract])\n\n    const loadKhyberYield = useCallback(async(user) => {\n        let balance = await khyberFarmContract.calculateYieldTotal(user)\n        setKhyberYield(balance.toString())\n    }, [setKhyberYield, khyberFarmContract])\n\n    const loadKhyberUnrealizedYield = useCallback(async(user) => {\n        let balance = await khyberFarmContract.khyberBalance(user)\n        setKhyberUnrealizedYield(balance.toString())\n    }, [setKhyberUnrealizedYield, khyberFarmContract])\n\n\n    const userDidMount = useCallback(async() => {\n    \ttry{\n    \t\tawait loadUser().then(res => {\n    \t\t\tsetUserAddress(res)\n    \t\t\tloadEthBalance(res)\n    \t\t\tloadDaiBalance(res)\n    \t\t\tloadKhyberBalance(res)\n    \t\t\tloadStakingBalance(res)\n    \t\t\tloadKhyberYield(res)\n    \t\t\tloadKhyberUnrealizedYield(res)\n    \t\t})\n    \t} catch(error) {\n    \t\tconsole.log(error)\n    \t}\n        await loadNetwork()\n    }, [\n        loadUser, \n        loadNetwork, \n        loadEthBalance, \n        loadDaiBalance,\n        loadKhyberBalance,\n        loadStakingBalance,\n        setUserAddress,\n        loadKhyberYield,\n        loadKhyberUnrealizedYield\n    ])\n\n    useEffect(() => {\n        if(userAddress === \"\" && init === true){\n            userDidMount()\n        }\n    }, [userDidMount, init, userAddress])\n\n    /**\n     * @notice Contract balances/state\n     */\n\n    const loadOwner = useCallback(async() => {\n        let contractOwner = await lotteryContract.owner()\n        setOwner(contractOwner)\n    }, [lotteryContract, setOwner])\n\n    const loadLotteryPool = useCallback(async() => {\n        let balance = await khyberTokenContract.balanceOf(lotteryContract.address)\n        setLotteryBalance(ethers.utils.formatEther(balance))\n    }, [lotteryContract, khyberTokenContract]) \n\n    const loadLinkBalance = useCallback(async() => {\n        let balance = await linkContract.balanceOf(lotteryContract.address)\n        setLinkBalance(ethers.utils.formatEther(balance))\n    }, [lotteryContract, linkContract, setLinkBalance])\n\n    const loadLotteryCount = useCallback(async() => {\n        let count = await lotteryContract.lotteryCount()\n        setLotteryCount(count.toString())\n        return count.toString()\n    }, [lotteryContract])\n\n    const loadWinningNumber = useCallback(async(lottoCount) => {\n        let number = await lotteryContract.winningNumber(lottoCount)\n        setWinningNumber(number.toString())\n    }, [setWinningNumber, lotteryContract])\n\n    const contractStateDidMount = useCallback(async() => {\n        await loadOwner()\n        await loadLotteryPool()\n        await loadLinkBalance()\n        await loadLotteryCount()\n            .then(async(res) => {\n                await loadWinningNumber(res)\n            })\n        }, [\n        loadOwner, \n        loadLotteryPool, \n        loadLinkBalance, \n        loadLotteryCount, \n        loadWinningNumber, \n    ])\n\n    useEffect(() => {\n      if(init === true){\n        contractStateDidMount()\n      }\n    }, [init, contractStateDidMount])\n\n    /**\n    * @notice Events ----------------------------------------->\n    */\n\n    useEffect(() => {\n        if(userAddress !== \"\"){\n        /**\n         * @notice KhyberFarm Events\n         */\n            khyberFarmContract.on(\"Stake\", async(userAddress) => {\n                await loadDaiBalance(userAddress)\n                await loadStakingBalance(userAddress)\n            });\n\n            khyberFarmContract.on(\"Unstake\", async(userAddress) => {\n                await loadDaiBalance(userAddress)\n                await loadStakingBalance(userAddress)\n            })\n\n            khyberFarmContract.on(\"YieldWithdraw\", async(userAddress) => {\n                await loadKhyberUnrealizedYield(userAddress)\n                await loadKhyberYield(userAddress)\n                await loadKhyberBalance(userAddress)\n            })\n\n            khyberFarmContract.on(\"MintNFT\", async(userAddress) => {\n                await loadKhyberBalance(userAddress)\n            })\n\n            /**\n             * @notice Lottery events\n             */\n\n            lotteryContract.on(\"NumberReceived\", async(userAddress) => {\n                await loadLotteryCount()\n                  .then(async(res) => {\n                await loadWinningNumber(res)\n                })\n            })\n\n            lotteryContract.on(\"LotteryClaim\", async(userAddress) => {\n                await loadKhyberBalance(userAddress)\n                await loadLotteryPool()\n            })\n\n            lotteryContract.on(\"WithdrawLink\", async(userAddress) => {\n                await loadLinkBalance()\n            })\n        }\n\n    /**\n     * @notice Updates Khyber yield balance every 20 seconds\n     */\n\n    if(stakingBalance > 0){\n        let interval = null\n        interval = setInterval(() => {\n            loadKhyberYield(userAddress)\n        }, 20000)\n    return () => clearInterval(interval)\n    }\n\n    }, [\n        khyberFarmContract, \n        userAddress, \n        stakingBalance,\n        lotteryContract,\n        loadDaiBalance, \n        loadStakingBalance,\n        loadKhyberUnrealizedYield,\n        loadKhyberYield,\n        loadKhyberBalance,\n        loadWinningNumber,\n        loadLotteryContract,\n        loadLinkBalance,\n        loadLotteryCount,\n        loadLotteryPool,\n    ])\n\n    return (\n        <Container>\n          <ContractProvider value={contractState}>\n            <UserProvider value={userState}>\n              \t<Main />\n            </UserProvider>\n          </ContractProvider>\n        </Container>\n      );\n    }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}